/*! collections.js 14-07-2015 */

"use strict";window.DictKeyNotFound=function(opt_key){opt_key?(this.keyWasSupplied=!0,this.key=opt_key):this.keyWasSupplied=!1},window.DictKeyNotHashable=function(key){this.key=key},window.Dict=function(){var TYPE_BOOLEAN=typeof!0,TYPE_NAN=String(NaN),TYPE_NULL=String(null),TYPE_NUMBER="number",TYPE_STRING="string",TYPE_UNDEFINED="undefined",TYPES={};if(TYPES[TYPE_BOOLEAN]=!0,TYPES[TYPE_NAN]=!0,TYPES[TYPE_NULL]=!0,TYPES[TYPE_NUMBER]=!0,TYPES[TYPE_STRING]=!0,TYPES[TYPE_UNDEFINED]=!0,Number.isNaN)var nanTest=Number.isNaN.bind(Number);else var nanTest=function(v){return v!=v};var GET_TYPE=function(v){return null===v?TYPE_NULL:nanTest(v)?TYPE_NAN:typeof v},Dict=function(opt_keyValues){this.clear(),void 0!==opt_keyValues&&this.update(opt_keyValues)};return Dict.fromKeys=function(keys,opt_valueForAllKeys){for(var dict=new Dict,i=0,len=keys.length;len>i;i++)dict.set(keys[i],opt_valueForAllKeys);return dict},Dict.checkKeyIsHashable_=function(key){if(!TYPES[GET_TYPE(key)])throw new DictKeyNotHashable(key)},Dict.prototype.clear=function(){var typeToKeyValues={};for(var type in TYPES)typeToKeyValues[type]={};this.dict_=typeToKeyValues},Dict.prototype.copy=function(){return new Dict(this)},Dict.prototype.set=function(key,value){if(Dict.checkKeyIsHashable_(key),arguments.length<2)throw Error("Must supply a key and a value.");return this.dict_[GET_TYPE(key)][key]=value},Dict.prototype.update=function(keyValues){var setKey=this.set.bind(this);if(keyValues instanceof Dict)keyValues.iteritems(setKey);else if(keyValues instanceof Array)for(var i=0,len=keyValues.length;len>i;i++){var keyValue=keyValues[i];setKey(keyValue[0],keyValue[1])}else{if("object"!=typeof keyValues)throw Error("Cannot update dict from type: "+typeof keyValues);var keys=Object.keys(keyValues);for(i=0,len=keys.length;len>i;i++){var key=keys[i];setKey(key,keyValues[key])}}},Dict.prototype.hasKey=function(key){return Dict.checkKeyIsHashable_(key),this.dict_[GET_TYPE(key)].hasOwnProperty(key)},Dict.prototype.get=function(key,opt_defaultValue){var numArgs=arguments.length;if(!numArgs)throw Error("Must supply a key");Dict.checkKeyIsHashable_(key);var hasKey=this.hasKey(key);if(1===numArgs&&!hasKey)throw new DictKeyNotFound(key);return hasKey?this.dict_[GET_TYPE(key)][key]:opt_defaultValue},Dict.prototype.del=function(key){if(Dict.checkKeyIsHashable_(key),!this.hasKey(key))throw new DictKeyNotFound(key);delete this.dict_[GET_TYPE(key)][key]},Dict.prototype.pop=function(key,opt_defaultValue){Dict.checkKeyIsHashable_(key);var hasKey=this.hasKey(key);if(1===arguments.length&&!hasKey)throw new DictKeyNotFound(key);var value=this.get(key,opt_defaultValue);return hasKey&&this.del(key),value},Dict.prototype.iterkeys=function(cb){var key,keysByType=this.dict_;for(key in keysByType[TYPE_BOOLEAN])cb("true"===key?!0:!1,this);for(key in keysByType[TYPE_NUMBER])cb(Number(key),this);for(key in keysByType[TYPE_STRING])cb(key,this);Object.keys(keysByType[TYPE_NAN]).length&&cb(NaN,this),Object.keys(keysByType[TYPE_NULL]).length&&cb(null,this),Object.keys(keysByType[TYPE_UNDEFINED]).length&&cb(void 0,this)},Dict.prototype.keys=function(){var results=[];return this.iterkeys(function(key){results.push(key)}),results},Dict.prototype.getFirstKey=function(){var firstKey,keyWasFound=!1;if(this.iterkeys(function(key){keyWasFound||(firstKey=key,keyWasFound=!0)}),!keyWasFound)throw new DictKeyNotFound;return firstKey},Dict.prototype.getFirstMatchingKey=function(predicate){var firstKey,keyWasFound=!1;if(this.iterkeys(function(key,self){!keyWasFound&&predicate(key,self)&&(firstKey=key,keyWasFound=!0)}),!keyWasFound)throw new DictKeyNotFound;return firstKey},Dict.prototype.popitem=function(){var keyToPop=this.getFirstKey();return[keyToPop,this.pop(keyToPop)]},Dict.prototype.length=function(){var count=0;return this.iterkeys(function(){count++}),count},Dict.prototype.isEmpty=function(){return!this.length()},Dict.prototype.iteritems=function(cb){this.iterkeys(function(key,self){cb(key,self.get(key),self)})},Dict.prototype.items=function(){var results=[];return this.iteritems(function(key,value){results.push([key,value])}),results},Dict.prototype.itervalues=function(cb){this.iterkeys(function(key,self){cb(self.get(key),self)})},Dict.prototype.values=function(){var results=[];return this.itervalues(function(value){results.push(value)}),results},Dict.prototype.setOneNewValue=function(key,fn){return this.set(key,fn(this.get(key),key,this))},Dict.prototype.setSomeNewValues=function(keys,fn){for(var i=0,len=keys.length;len>i;i++)this.setOneNewValue(keys[i],fn)},Dict.prototype.setAllNewValues=function(fn){this.iterkeys(function(key,self){self.setOneNewValue(key,fn)})},Dict}(),window.DefaultDict=function(){var DefaultDict=function(defaultFn,opt_keyValues){if("function"!=typeof defaultFn)throw Error("Must supply a default function.");this.default_=defaultFn,Dict.call(this,opt_keyValues)};return DefaultDict.prototype.constructor=Dict,DefaultDict.prototype=Object.create(Dict.prototype),DefaultDict.prototype.get=function(key){return arguments.length>1?Dict.prototype.get.apply(this,arguments):(Dict.checkKeyIsHashable_(key),this.hasKey(key)?Dict.prototype.get.call(this,key):this.set(key,this.default_()))},DefaultDict}(),window.Counter=function(){var Counter=function(opt_keyValues){DefaultDict.call(this,Number,opt_keyValues)};return Counter.constructor=DefaultDict,Counter.prototype=Object.create(DefaultDict.prototype),Counter.getIncrementor=function(incrementBy){return function(v){return v+incrementBy}},Counter.fromKeys=function(){throw Error("Not implemented on Counter.")},Counter.prototype.update=function(keyValues){var isDict=keyValues instanceof Dict,isArray=keyValues instanceof Array,isObject="object"==typeof keyValues&&!isArray&&!isDict;if(this.isEmpty()&&(isDict||isObject))return DefaultDict.prototype.update.call(this,keyValues);if(isDict){var self=this;keyValues.iteritems(function(key,value){self.setOneNewValue(key,Counter.getIncrementor(value))})}else if(isArray)this.setSomeNewValues(keyValues,Counter.getIncrementor(1));else if(isObject)for(var keys=Object.keys(keyValues),i=0,len=keys.length;len>i;i++){var key=keys[i];this.setOneNewValue(key,Counter.getIncrementor(keyValues[key]))}else DefaultDict.prototype.update.call(this,keyValues)},Counter.prototype.iterelements=function(callback){this.iteritems(function(key,numberOfElementsWithKey,self){for(var i=0;numberOfElementsWithKey>i;i++)callback(key,i,numberOfElementsWithKey,self)})},Counter.prototype.elements=function(){var elements=[];return this.iterelements(function(key){elements.push(key)}),elements},Counter.prototype.subtract=function(keyValues){if(keyValues instanceof Dict){var self=this;keyValues.iteritems(function(key,value){self.setOneNewValue(key,Counter.getIncrementor(-value))})}else if(keyValues instanceof Array)this.setSomeNewValues(keyValues,Counter.getIncrementor(-1));else{if("object"!=typeof keyValues)throw Error("Must subtract Dict, Array, or Object.");for(var keys=Object.keys(keyValues),i=0,len=keys.length;len>i;i++){var key=keys[i];this.setOneNewValue(key,Counter.getIncrementor(-keyValues[key]))}}},Counter.prototype.mostCommon=function(opt_n){var items=this.items().sort(function(a,b){return b[1]-a[1]});return arguments.length?items.slice(0,opt_n):items},Counter.prototype.leastCommon=function(opt_n){var items=this.items().sort(function(a,b){return a[1]-b[1]});return arguments.length?items.slice(0,opt_n):items},Counter}();
//# sourceMappingURL=collections.min.js.map